#ifndef EVALUATION_SIMPLIFIED_EVALUATION_FUNCTION_HPP
#define EVALUATION_SIMPLIFIED_EVALUATION_FUNCTION_HPP
#include "position/Position.hpp"

// Implementation of https://www.chessprogramming.org/Simplified_Evaluation_Function

namespace evaluation_sef
{

const int pst_pawn[64] = {0, 0, 0,  0,  0,  0,  0, 0, 5,  10, 10, -20, -20, 10, 10, 5,  5,  -5, -10, 0,  0,  -10, -5, 5,  0, 0, 0, 20, 20, 0, 0, 0,
                          5, 5, 10, 25, 25, 10, 5, 5, 10, 10, 20, 30,  30,  20, 10, 10, 50, 50, 50,  50, 50, 50,  50, 50, 0, 0, 0, 0,  0,  0, 0, 0};

const int pst_knight[64] = {-50, -40, -30, -30, -30, -30, -40, -50, -40, -20, 0,  5,  5,  0,  -20, -40, -30, 5,   10, 15, 15, 10, 5,   -30, -30, 0,   15,  20,  20,  15,  0,   -30,
                            -30, 5,   15,  20,  20,  15,  5,   -30, -30, 0,   10, 15, 15, 10, 0,   -30, -40, -20, 0,  0,  0,  0,  -20, -40, -50, -40, -30, -30, -30, -30, -40, -50};

const int pst_bishop[64] = {-20, -10, -10, -10, -10, -10, -10, -20, -10, 5, 0, 0,  0,  0, 5, -10, -10, 10, 10, 10, 10, 10, 10, -10, -10, 0,   10,  10,  10,  10,  0,   -10,
                            -10, 5,   5,   10,  10,  5,   5,   -10, -10, 0, 5, 10, 10, 5, 0, -10, -10, 0,  0,  0,  0,  0,  0,  -10, -20, -10, -10, -10, -10, -10, -10, -20};

const int pst_rook[64] = {0,  0, 0, 5, 5, 0, 0, 0,  -5, 0, 0, 0, 0, 0, 0, -5, -5, 0,  0,  0,  0,  0,  0,  -5, -5, 0, 0, 0, 0, 0, 0, -5,
                          -5, 0, 0, 0, 0, 0, 0, -5, -5, 0, 0, 0, 0, 0, 0, -5, 5,  10, 10, 10, 10, 10, 10, 5,  0,  0, 0, 0, 0, 0, 0, 0};

const int pst_queen[64] = {-20, -10, -10, -5, -5, -10, -10, -20, -10, 0, 5, 0, 0, 0, 0, -10, -10, 5, 5, 5, 5, 5, 0, -10, 0,   0,   5,   5,  5,  5,   0,   -5,
                           -5,  0,   5,   5,  5,  5,   0,   -5,  -10, 0, 5, 5, 5, 5, 0, -10, -10, 0, 0, 0, 0, 0, 0, -10, -20, -10, -10, -5, -5, -10, -10, -20};

const int pst_king[64] = {20,  30,  10,  0,   0,   10,  30,  20,  20,  20,  0,   0,   0,   0,   20,  20,  -10, -20, -20, -20, -20, -20, -20, -10, -20, -30, -30, -40, -40, -30, -30, -20,
                          -30, -40, -40, -50, -50, -40, -40, -30, -30, -40, -40, -50, -50, -40, -40, -30, -30, -40, -40, -50, -50, -40, -40, -30, -30, -40, -40, -50, -50, -40, -40, -30};

int get_piece_value(const Piece& piece);

int get_pst_value(const Piece& piece, const int pst_index);

int evaluate_board(const Position& position);
}  // namespace evaluation_sef

#endif  // EVALUATION_SIMPLIFIED_EVALUATION_FUNCTION_HPP
